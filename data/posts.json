{
	"posts": [
		{
			"title": "AngularJS - Controllers",
			"author": "Ilan Cohen",
			"date": "1421186400000",
			"tags": ["JavaScript", "AngularJS"],
			"mdPath": "data/posts/md/AngularJS - Controllers.md",
			"htmlPath": "data/posts/html/AngularJS - Controllers.html",
			"description": "In Angular, a Controller is a JavaScript constructor function that is used to augment the Angular Scope. When a Controller is attached to the DOM via the ng-controller directive, Angular will instantiate a new Controller object, using the specified Controller's constructor function. A new child scope will be available as an injectable parameter to the Controller's constructor function as $scope."
		},
		{
			"title": "AngularJS - Modules",
			"author": "Ilan Cohen",
			"date": "1421186400000",
			"tags": ["JavaScript", "AngularJS"],
			"mdPath": "data/posts/md/AngularJS - Modules.md",
			"htmlPath": "data/posts/html/AngularJS - Modules.html",
			"description": "You can think of a module as a container for the different parts of your app – controllers, services, filters, directives, etc. Most applications have a main method that instantiates and wires together the different parts of the application. Angular apps don't have a main method. Instead modules declaratively specify how an application should be bootstrapped."
		},
		{
			"title": "AngularJS - Routes",
			"author": "Ilan Cohen",
			"date": "1421186400000",
			"tags": ["JavaScript", "AngularJS"],
			"mdPath": "data/posts/md/AngularJS - Routes.md",
			"htmlPath": "data/posts/html/AngularJS - Routes.html",
			"description": "AngularJS routes enable you to create different URLs for different content in your application. Having different URLs for different content enables the user to bookmark URLs to specific content, and send those URLs to friends etc. In AngularJS each such bookmarkable URL is called a route."
		},
		{
			"title": "AngularJS - Services",
			"author": "Ilan Cohen",
			"date": "1421186400000",
			"tags": ["JavaScript", "AngularJS"],
			"mdPath": "data/posts/md/AngularJS - Services.md",
			"htmlPath": "data/posts/html/AngularJS - Services.html",
			"description": "Angular services are substitutable objects that are wired together using dependency injection (DI). You can use services to organize and share code across your app. Angular offers several useful services (like $http), but for most applications you'll also want to create your own."
		},
		{
			"title": "Grunt - Custom Tasks",
			"author": "Alex Ilyaev",
			"date": "1418162400000",
			"tags": ["Grunt", "Tools"],
			"mdPath": "data/posts/md/Grunt - Custom Tasks.md",
			"htmlPath": "data/posts/html/Grunt - Custom Tasks.html",
			"description": "Tasks are grunt's bread and butter. The stuff you do most often, like jshint or nodeunit. Every time Grunt is run, you specify one or more tasks to run, which tells Grunt what you'd like it to do. You can go crazy with tasks. If your tasks don't follow the 'multi task' structure, use a custom task."
		},
		{
			"title": "Grunt - Intro",
			"author": "Alex Ilyaev",
			"date": "1418162400000",
			"tags": ["Grunt", "Tools"],
			"mdPath": "data/posts/md/Grunt - Intro.md",
			"htmlPath": "data/posts/html/Grunt - Intro.html",
			"description": "Grunt is a task-based command line build tool for JavaScript projects. Here’s the idea: when working on a JavaScript project, there are a bunch of things you’ll want to do regularly. Like what, you ask? Well, like concatenating given files, running JSHint on your code, running tests, or minifying your scripts."
		},
		{
			"title": "jQuery - Events, AJAX",
			"author": "Amit Choukroun",
			"date": "1417557600000",
			"tags": ["JavaScript", "jQuery"],
			"mdPath": "data/posts/md/jQuery - Events, AJAX.md",
			"htmlPath": "data/posts/html/jQuery - Events, AJAX.html",
			"description": "jQuery Event methods trigger or attach a function to an event handler for the selected elements. These methods are used to register behaviors to take effect when the user interacts with the browser, and to further manipulate those registered behaviors."
		},
		{
			"title": "jQuery - Selectors, DOM",
			"author": "Amit Choukroun",
			"date": "1417384800000",
			"tags": ["JavaScript", "jQuery"],
			"mdPath": "data/posts/md/jQuery - Selectors, DOM.md",
			"htmlPath": "data/posts/html/jQuery - Selectors, DOM.html",
			"description": "Borrowing from CSS 1–3, and then adding its own, jQuery offers a powerful set of tools for matching a set of elements in a document. There are also methods to manipulate the DOM in some manner. A few of those methods simply change one of the attributes of an element, while others set an element's style properties or modify entire elements."
		}
	]
}
